@page "/ratings/view/{RatingId:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js

@attribute [Authorize]
@using MovieRentalApplication.Shared.Domain

<h3>Rating Details</h3>

@if (rating == null)
{
    <p><em>Loading rating details...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">ID:</dt>
        <dd class="col-sm-9">@rating.Id</dd>

        <dt class="col-sm-3">Name:</dt>
        <dd class="col-sm-9">@rating.Name</dd>
    </dl>

    <a href="/ratings/edit/@rating.Id" class="btn btn-primary">Edit</a>
    <button class="btn btn-danger" @onclick="DeleteRating">Delete</button>
}

@code {
    [Parameter]
    public int RatingId { get; set; }

    private Rating? rating;

    protected override async Task OnInitializedAsync()
    {
        rating = await _client.GetFromJsonAsync<Rating>($"api/ratings/{RatingId}");
    }

    private async Task DeleteRating()
    {
        var confirmed = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete the rating '{rating?.Name}'?");

        if (confirmed)
        {
            var response = await _client.DeleteAsync($"api/ratings/{RatingId}");
            if (response.IsSuccessStatusCode)
            {
                _navManager.NavigateTo("/ratings");
            }
            else
            {
                // Handle the error
            }
        }
    }
}
